# Copyright 2020-2021 Signal Messenger, LLC
# SPDX-License-Identifier: AGPL-3.0-only

name: CI
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - run: lsb_release -a
    - run: uname -a
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '16.9.1'
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - run: yarn generate
    - run: yarn lint
    - run: yarn lint-deps
    # - run: yarn lint-license-comments
    - run: git diff --exit-code

  macos:
    needs: lint
    runs-on: macos-11.0
    if: github.ref == 'refs/heads/development' || github.ref == 'refs/heads/master'

    steps:
    - run: uname -a
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '16.9.1'
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - run: yarn generate
    - run: yarn prepare-beta-build
    - run: yarn build
    - name: Rebuild native modules for x64
      run: yarn electron:install-app-deps
    - run: yarn test-node
    - run: yarn test-electron
    - run: yarn test-release
      env:
        NODE_ENV: production

  linux:
    needs: lint
    runs-on: ubuntu-latest

    steps:
    - run: lsb_release -a
    - run: uname -a
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '16.9.1'
    - run: sudo apt-get install xvfb
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - run: yarn generate
    - run: yarn prepare-beta-build
    - run: yarn build
    - run: xvfb-run --auto-servernum yarn test-node
    - run: xvfb-run --auto-servernum yarn test-electron
      env:
        LANG: en_US
        LANGUAGE: en_US
    - run: xvfb-run --auto-servernum yarn test-release
      env:
        NODE_ENV: production

  windows:
    needs: lint
    runs-on: windows-latest

    steps:
    - run: systeminfo
    - run: git config --global core.autocrlf false
    - run: git config --global core.eol lf
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '16.9.1'
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - run: yarn generate
    - run: node build\grunt.js
    - run: yarn test-node
    - run: copy package.json temp.json
    - run: del package.json
    - run: type temp.json | findstr /v certificateSubjectName | findstr /v certificateSha1 > package.json
    - run: yarn prepare-beta-build
    - run: yarn build
    - run: yarn test-electron
    - run: yarn test-release
      env:
        SIGNAL_ENV: production
